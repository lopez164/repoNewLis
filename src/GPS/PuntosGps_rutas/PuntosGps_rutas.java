/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GPS.PuntosGps_rutas;

import GPS.PuntosGps.PolyLine;
import GPS.wayPoints.MyWayPoint;
import GPS.wayPoints.WayPointRenderer;
import com.conf.Inicio;
import com.obj.CCarros;
import com.obj.dist.CManifiestosDeDistribucion;
import com.obj.dist.CClientes;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.MouseInputListener;
import javax.swing.table.DefaultTableModel;
import org.jxmapviewer.*;
import org.jxmapviewer.input.PanKeyListener;
import org.jxmapviewer.input.PanMouseInputListener;
import org.jxmapviewer.input.ZoomMouseWheelListenerCenter;
import org.jxmapviewer.painter.Painter;
import org.jxmapviewer.viewer.DefaultTileFactory;
import org.jxmapviewer.viewer.GeoPosition;
import org.jxmapviewer.viewer.TileFactoryInfo;
import org.jxmapviewer.viewer.WaypointPainter;

/**
 *
 * @author Usuario
 */
public class PuntosGps_rutas extends javax.swing.JInternalFrame {

    public boolean verificado;

    CCarros carro = null;
    //List<MyWayPoint> c;
    //List<MyWayPoint> wpPuntosRecorridos;

    Set<MyWayPoint> listaWpClientes;
    Set<MyWayPoint> listaWpPuntosRecorridos;

    List<Painter<JXMapViewer>> painters;
    List<CClientes> listiClientesSinGeoreferenciar;

    List<CCarros> listadeCarros;
    List<PolyLine> listadeLineas;

    String placa;
    String numeroManifiesto;
    CManifiestosDeDistribucion manifiesto;

    String fechaInicial, fechaFinal;

    GeoPosition centro;
    GeoPosition puntoCliente;

    private List<ImageIcon> listaDeIconosClientes;

    String servertime = "2023-03-10 06:00:00";
    String servertime2 = "2023-03-10 23:59:59";

    String fechaDistribucion = "2023-03-10";

    Inicio ini;

    NumberFormat nf = NumberFormat.getCurrencyInstance(Locale.getDefault());

    //private FResidentes residente = (FResidentes)this.getParent();//
    /**
     * Creates new form FBuscar2
     */
    public PuntosGps_rutas(Inicio ini) {  // av 3 # 10-53 multipagas  

        this.ini = ini;
        initComponents();
        jCheckRecorrido.setVisible(false);

        // Obteniendo la fecha actual del sistema.
        Date fecha = new Date(Calendar.getInstance().getTimeInMillis());
        Calendar calendario = Calendar.getInstance();
        int hora = calendario.getTime().getHours();
        int minuto = calendario.getTime().getMinutes();
        int segundo = calendario.getTime().getSeconds();

        GregorianCalendar gc = new GregorianCalendar();

        long minIni = gc.getTimeInMillis() - ((3600000 * hora) + (60000 * minuto) + (1000 * segundo));
        long minMax = gc.getTimeInMillis();

        jFechaInicial.setDate(new Date(minIni));

        jFechaFinal.setDate(new Date(minMax));

        painters = new ArrayList<Painter<JXMapViewer>>();

        //jCheckRecorrido.setEnabled(true);
        SimpleDateFormat formatter = new SimpleDateFormat("YYYY-MM-dd");
        SimpleDateFormat Formato = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        servertime = Formato.format(jFechaInicial.getDate());
        servertime2 = Formato.format(jFechaFinal.getDate());

        fechaDistribucion = formatter.format(jFechaInicial.getDate());

        lblDesde.setVisible(false);
        lblHasta.setVisible(false);
        jFechaFinal.setVisible(false);
        jFechaInicial.setVisible(false);

        init();
        iniciar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMapa = new javax.swing.JPanel();
        jXMapViewer1 = new org.jxmapviewer.JXMapViewer();
        comboMap = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        lblDesde = new javax.swing.JLabel();
        jFechaInicial = new com.toedter.calendar.JDateChooser();
        lblHasta = new javax.swing.JLabel();
        jFechaFinal = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListaDeCarros = new javax.swing.JList<>();
        jCheckRecorrido = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtLatitud = new ui.swing.textField.TextField();
        txtLongitud = new ui.swing.textField.TextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setClosable(true);
        setIconifiable(true);
        setTitle("Formulario para Consulta de Rutas, clientes y vehiculos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/map.png"))); // NOI18N

        jXMapViewer1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXMapViewer1MouseClicked(evt);
            }
        });

        comboMap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Virtual Earth", "Open Street MAp", "Hybrid", "Satellite" }));
        comboMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXMapViewer1Layout = new javax.swing.GroupLayout(jXMapViewer1);
        jXMapViewer1.setLayout(jXMapViewer1Layout);
        jXMapViewer1Layout.setHorizontalGroup(
            jXMapViewer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXMapViewer1Layout.createSequentialGroup()
                .addContainerGap(1022, Short.MAX_VALUE)
                .addComponent(comboMap, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jXMapViewer1Layout.setVerticalGroup(
            jXMapViewer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXMapViewer1Layout.createSequentialGroup()
                .addComponent(comboMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(242, 236, 229));

        lblDesde.setText("Desde  :");

        jFechaInicial.setToolTipText("Seleccionar la fecha ");
        jFechaInicial.setDateFormatString("yyyy-MM-dd HH:mm:ss");
        jFechaInicial.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N

        lblHasta.setText("Hasta :");

        jFechaFinal.setToolTipText("Seleccionar la fecha ");
        jFechaFinal.setDateFormatString("yyyy-MM-dd HH:mm:ss");
        jFechaFinal.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N

        jPanel3.setOpaque(false);

        jListaDeCarros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListaDeCarros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListaDeCarrosMouseClicked(evt);
            }
        });
        jListaDeCarros.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListaDeCarrosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListaDeCarros);

        jCheckRecorrido.setText("Recorrido");
        jCheckRecorrido.setEnabled(false);
        jCheckRecorrido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckRecorridoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Clave", "Valor"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jCheckRecorrido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckRecorrido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        txtLatitud.setEditable(false);
        txtLatitud.setLabelText("Latitud");
        txtLatitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLatitudActionPerformed(evt);
            }
        });

        txtLongitud.setEditable(false);
        txtLongitud.setLabelText("Longitud");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLatitud, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDesde)
                    .addComponent(jFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHasta)
                    .addComponent(jFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtLatitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDesde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(jFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jFechaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelMapaLayout = new javax.swing.GroupLayout(panelMapa);
        panelMapa.setLayout(panelMapaLayout);
        panelMapaLayout.setHorizontalGroup(
            panelMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMapaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXMapViewer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        panelMapaLayout.setVerticalGroup(
            panelMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMapaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jXMapViewer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMapa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panelMapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMapActionPerformed
        TileFactoryInfo info = null;

        int index = comboMap.getSelectedIndex();
        switch (index) {
            case 0:
                info = new VirtualEarthTileFactoryInfo(VirtualEarthTileFactoryInfo.MAP);
                break;
            case 1:
                info = new OSMTileFactoryInfo();
                break;
            case 2:
                info = new VirtualEarthTileFactoryInfo(VirtualEarthTileFactoryInfo.HYBRID);
                break;
            case 3:
                info = new VirtualEarthTileFactoryInfo(VirtualEarthTileFactoryInfo.SATELLITE);
                break;

            default:

                break;

        }

        DefaultTileFactory tileFactory = new DefaultTileFactory(info);
        jXMapViewer1.setTileFactory(tileFactory);

    }//GEN-LAST:event_comboMapActionPerformed

    private void jCheckRecorridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckRecorridoActionPerformed

        if (jCheckRecorrido.isSelected()) {
            /* Date fecha = new Date(Calendar.getInstance().getTimeInMillis());
            
            String fechaTexto = formatter.format(fecha);
            fechaDistribucion = fechaTexto;

           **/
            SimpleDateFormat formatter = new SimpleDateFormat("YYYY-MM-dd");
            SimpleDateFormat Formato = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

            fechaInicial = Formato.format(jFechaInicial.getDate());
            fechaFinal = Formato.format(jFechaFinal.getDate());

            fechaDistribucion = formatter.format(jFechaInicial.getDate());

            new Thread(new HiloPuntosGps_rutas(this, "mostrarRecorrido", placa)).start();
        }
        txtLatitud.setText("");
        txtLongitud.setText("");
    }//GEN-LAST:event_jCheckRecorridoActionPerformed

    private void jListaDeCarrosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListaDeCarrosValueChanged


    }//GEN-LAST:event_jListaDeCarrosValueChanged

    private void jXMapViewer1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXMapViewer1MouseClicked
        GeoPosition geoposition = jXMapViewer1.convertPointToGeoPosition(evt.getPoint());
        txtLatitud.setText("" + geoposition.getLatitude());
        txtLongitud.setText("" + geoposition.getLongitude());
        // txtCoordenadas.setText(geoposition.getLatitude() + "," + geoposition.getLongitude());

    }//GEN-LAST:event_jXMapViewer1MouseClicked

    private void jListaDeCarrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListaDeCarrosMouseClicked

        String valor;
        valor = jListaDeCarros.getSelectedValue().toString();
        String[] cad = valor.split("-");
        placa = cad[0];
        numeroManifiesto = cad[1];

        txtLatitud.setText("");
        txtLongitud.setText("");

        jCheckRecorrido.setVisible(false);
        jCheckRecorrido.setSelected(false);

        // double valor = 0.0;
        // SE LLENA LA TABLA DE FACTURAS POR MANIFIESTO
        // for (CFacturasPorManifiesto obj : manifiestoActual.getListaFacturasPorManifiesto()) {
        for (CManifiestosDeDistribucion mafto : ini.getListaDeManifiestossinDescargar()) {
            if (mafto.getVehiculo().equals(placa) && mafto.getNumeroManifiesto().equals(numeroManifiesto)) {
                manifiesto = mafto;
                break;
            }
        }
        for (CCarros car : listadeCarros) {
            if (car.getPlaca().equals(placa)) {
                carro = car;
                break;
            }
        }
        llamarClientesDePlaca();

        //}
    }//GEN-LAST:event_jListaDeCarrosMouseClicked

    private void txtLatitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLatitudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLatitudActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int x = this.jTable1.getSelectedRow();
        if (x == 6) {
            FlistaDeClientesSinGeoReferenciar form = new FlistaDeClientesSinGeoReferenciar(ini);
            this.getParent().add(form);
            // fDescargarFActuras.setSize(escritorio.getSize());
            form.setLocation(((ini.getDimension().width - form.getSize().width) / 2), ((ini.getDimension().height - form.getSize().height) / 2));
            form.setVisible(true);
            form.show();

            form.llenarJTable(listiClientesSinGeoreferenciar);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboMap;
    public javax.swing.JCheckBox jCheckRecorrido;
    public com.toedter.calendar.JDateChooser jFechaFinal;
    public com.toedter.calendar.JDateChooser jFechaInicial;
    public javax.swing.JList<String> jListaDeCarros;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    public org.jxmapviewer.JXMapViewer jXMapViewer1;
    private javax.swing.JLabel lblDesde;
    private javax.swing.JLabel lblHasta;
    private javax.swing.JPanel panelMapa;
    private ui.swing.textField.TextField txtLatitud;
    private ui.swing.textField.TextField txtLongitud;
    // End of variables declaration//GEN-END:variables

    private void init() {

        /*se establece la ubicacion del cliente */
        Double coordenadas;
        String punto = ini.getGeoPositionCliente();
        String[] coord = punto.split(",");
        puntoCliente = new GeoPosition(Double.parseDouble(coord[0]), Double.parseDouble(coord[1]));

        TileFactoryInfo info = new OSMTileFactoryInfo();
        DefaultTileFactory tileFactory = new DefaultTileFactory(info);
        jXMapViewer1.setTileFactory(tileFactory);
        // GeoPosition geo = new GeoPosition(7.917701, -72.53558);
        jXMapViewer1.setAddressLocation(puntoCliente);
        jXMapViewer1.setZoom(5);
        jXMapViewer1.setSize(getSize());

        // Crear los eventos del mouse
        MouseInputListener ml = new PanMouseInputListener(jXMapViewer1);
        jXMapViewer1.addMouseListener(ml);
        jXMapViewer1.addMouseMotionListener(ml);
        jXMapViewer1.addMouseWheelListener(new ZoomMouseWheelListenerCenter(jXMapViewer1));
        jXMapViewer1.addKeyListener(new PanKeyListener(jXMapViewer1));
        jXMapViewer1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {

                boolean right = SwingUtilities.isRightMouseButton(evt);
                if (right) {
                    JOptionPane.showMessageDialog(jXMapViewer1, "punto de la pantalla" + evt.getLocationOnScreen());
                }
            }
        });

    }

    public void initWayPointsClientes() {
        WaypointPainter<MyWayPoint> wp = new WayPointRenderer();
        wp.setWaypoints(listaWpClientes);
        jXMapViewer1.setOverlayPainter(wp);
        for (MyWayPoint d : listaWpClientes) {
            jXMapViewer1.add(d.getButton());

        }

    }

    private void clearWayPoints() {
        for (MyWayPoint d : listaWpClientes) {
            jXMapViewer1.remove(d.getButton());

        }
        listaWpClientes.clear();
        //initWayPoints();
    }

    private void iniciar() {
        // llena una lista con los iconos de los clientes
        new Thread(new HiloPuntosGps_rutas(this, "setListaDeIconos")).start();

        // setListaDeCarros(1);
    }

    public void setListaDeCarros() {
        Thread thListadeVehiculos = new Thread(new Runnable() {
            @Override
            public void run() {

                listadeCarros = new ArrayList<>();
                int i = 0;

                DefaultListModel modelo = new DefaultListModel();

                for (CManifiestosDeDistribucion man : ini.getListaDeManifiestossinDescargar()) {
                    modelo.addElement(man.getVehiculo() + "-" + man.getNumeroManifiesto());

                }

                jListaDeCarros.setModel(modelo);

                for (CManifiestosDeDistribucion man : ini.getListaDeManifiestossinDescargar()) {

                    for (CCarros car : ini.getListaDeVehiculos()) {
                        if (man.getVehiculo().equals(car.getPlaca())) {
                            car.setIconClientes(listaDeIconosClientes.get(i++));
                            car.setIconoGPS(new javax.swing.ImageIcon(getClass().getResource("/GPS/icons/truck_32x32.png")));
                            listadeCarros.add(car);
                        }
                    }
                    if (i == 17) {
                        i = 0;
                    }

                }

            }

        });
        thListadeVehiculos.start();
    }

    /*Se llama la lista de carros que se encuentran en distribucion en el dia referido en 
    el jdatechooser */
    public void setListaDeCarros(int c) {
        Thread thListadeVehiculos = new Thread(new Runnable() {
            @Override
            public void run() {

                listadeCarros = new ArrayList<>();
                int i = 0;

                for (CManifiestosDeDistribucion man : ini.getListaDeManifiestossinDescargar()) {

                    for (CCarros car : ini.getListaDeVehiculos()) {
                        if (man.getVehiculo().equals(car.getPlaca())) {
                            car.setIconClientes(listaDeIconosClientes.get(i++));
                            car.setIconoGPS(new javax.swing.ImageIcon(getClass().getResource("/GPS/icons/truck_32x32.png")));
                            listadeCarros.add(car);
                        }
                    }
                    if (i == 17) {
                        i = 0;
                    }

                }

                llenarJlistaVehiculos();

            }

        });
        thListadeVehiculos.start();
    }

    public void llenarJlistaVehiculos() {

        if (listadeCarros != null || !listadeCarros.isEmpty()) {
            DefaultListModel modelo = new DefaultListModel();
            for (CCarros car : listadeCarros) {
                modelo.addElement(car.getPlaca());
            }

            jListaDeCarros.setModel(modelo);
        }

    }

    private void cargarClientesPorCarro() {

        Thread thPedidosDelDia = new Thread(new Runnable() {
            @Override
            public void run() {

                for (CCarros car : listadeCarros) {
                    // new Thread(new HiloPuntosGps(PuntosGps.this, "cargarClientesPorCarro"), car.getPlaca()).start();
                    if (car.getListaDeClientes() == null) {
                        // car.ini= ini;
                        // car.setWpClientes(car.getImageIcon());
                        car.setListaDeClientes(fechaDistribucion);
                    }

                }

            }

        });
        thPedidosDelDia.start();

    }

    public List<ImageIcon> getListaDeIconosClientes() {
        return listaDeIconosClientes;
    }

    public void setListaDeIconosClientes(List<ImageIcon> listaDeIconos) {
        this.listaDeIconosClientes = listaDeIconos;
    }

    public void llamarClientesDePlaca() {
        jCheckRecorrido.setEnabled(false);
        jCheckRecorrido.setSelected(false);
        new Thread(new HiloPuntosGps_rutas(this, "putWayPointsClientes", placa)).start();

    }

    public void llenarTabla() {
        DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();

        // modelo2.addRow(new Object[jTable1.getRowCount()]);
        jTable1.setValueAt("Numero Mfto :", 0, 0); // item 
        jTable1.setValueAt(manifiesto.getNumeroManifiesto(), 0, 1); // numero de la factura

        jTable1.setValueAt("Cant. pedidoss", 1, 0); // item 
        jTable1.setValueAt(manifiesto.getCantidadPedidos(), 1, 1); // numero de la factura

        jTable1.setValueAt("Valor Mfto.", 2, 0); // item 
        jTable1.setValueAt(nf.format(manifiesto.getValorTotalManifiesto()), 2, 1); // numero de la factura

        jTable1.setValueAt("Peso Kg.", 3, 0); // item 
        jTable1.setValueAt("" + (manifiesto.getPesoKgManifiesto() / 1000), 3, 1); // numero de la factura

        jTable1.setValueAt("Vehiculo ", 4, 0); // item 
        jTable1.setValueAt(manifiesto.getVehiculo(), 4, 1); // numero de la factura

        jTable1.setValueAt("Km Salida ", 5, 0); // item 
        jTable1.setValueAt("" + manifiesto.getKmSalida(), 5, 1); // numero de la factura

        listiClientesSinGeoreferenciar = new ArrayList<>();

        for (CClientes cliente : carro.getListaDeClientes()) {
            if (cliente.getLatitud().equals("0") || cliente.getLatitud().equals("0.0")) {
                listiClientesSinGeoreferenciar.add(cliente);
            }

        }

        jTable1.setValueAt("Clientes sin Georef. ", 6, 0); // item 
        jTable1.setValueAt("" + listiClientesSinGeoreferenciar.size(), 6, 1); // numero de la factura
        if (carro.getConGps() == 1) {
            jCheckRecorrido.setVisible(true);
            jCheckRecorrido.setSelected(false);
        } else {
            jCheckRecorrido.setVisible(false);
            jCheckRecorrido.setSelected(false);
        }

    }

}
